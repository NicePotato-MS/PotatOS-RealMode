{
 1 = "-- Lua and C like syntax",
 2 = "\
",
 3 = "\
",
 4 = "-- Constants",
 5 = "\
",
 6 = "-- true - 1",
 7 = "\
",
 8 = "-- false - 0",
 9 = "\
",
 10 = "-- FFCNST_PRG_SIZE - the size of the program in bytes, dependent on compile settings",
 11 = "\
",
 12 = "\
",
 13 = "-- Constant Defs",
 14 = "\
",
 15 = "-- FFDEF_PLATFORM - the platform being compiled to. Is string \"x86\" for x86",
 16 = "\
",
 17 = "\
",
 18 = "-- Hex values are converted to regular numbers at compile time",
 19 = "\
",
 20 = "\
",
 21 = "-- Compile options",
 22 = "\
",
 23 = "-- #suppress code - suppress a warning. replace code with option below",
 24 = "\
",
 25 = "-- -- size_overflow - warning when something you input doesn't fit. see below",
 26 = "\
",
 27 = "-- -- -- byte ? = 565 (number too big) ",
 28 = "\
",
 29 = "-- -- -- byte[2] ? = {12,43,42} (too many values)",
 30 = "\
",
 31 = "\
",
 32 = "-- Variables",
 33 = "\
",
 34 = "-- Variables can have letters of any case, numbers and hyphens. They cannot start with numbers.",
 35 = "\
",
 36 = "-- Variables cannot start with \"FFCNST_\" as this is reserved only for special constants ",
 37 = "\
",
 38 = "-- Variable 'tEst1' is accurate but not 'a+b-c' nor '123abc'",
 39 = "\
",
 40 = "-- They are case-sensitive, meaning variable 'test' and variable 'Test' are different",
 41 = "\
",
 42 = "\
",
 43 = "-- Initializing a variable with just '=' will be put wherever the compiler decides is fit",
 44 = "\
",
 45 = "byte",
 46 = " ",
 47 = "byteVar1",
 48 = " ",
 49 = "=",
 50 = " ",
 51 = "10",
 52 = " ",
 53 = "-- Number taking up a byte",
 54 = "\
",
 55 = "word",
 56 = " ",
 57 = "wordVar1",
 58 = " ",
 59 = "=",
 60 = " ",
 61 = "312",
 62 = " ",
 63 = "-- Number taking up a word (2 bytes, 16-bits)",
 64 = "\
",
 65 = "dword",
 66 = " ",
 67 = "dwordVar1",
 68 = " ",
 69 = "=",
 70 = " ",
 71 = "3746926745",
 72 = " ",
 73 = "-- Number taking up a DWord (4 bytes, 32-bits)",
 74 = "\
",
 75 = "qword",
 76 = " ",
 77 = "qwordVar1",
 78 = " ",
 79 = "=",
 80 = " ",
 81 = "842729494831",
 82 = " ",
 83 = "-- Number taking up a QWord (8 bytes, 64-bits)",
 84 = "\
",
 85 = "-- You can initialize a variable at an address with '>'",
 86 = "\
",
 87 = "byte",
 88 = " ",
 89 = "byteVar2",
 90 = " ",
 91 = ">",
 92 = " ",
 93 = "0xB000",
 94 = " ",
 95 = "=",
 96 = " ",
 97 = "1",
 98 = "\
",
 99 = "-- You can use variables here, however its location will not change if the variable changes",
 100 = "\
",
 101 = "byte",
 102 = " ",
 103 = "byteVar3",
 104 = " ",
 105 = ">",
 106 = " ",
 107 = "byteVar1",
 108 = " ",
 109 = "=",
 110 = " ",
 111 = "0",
 112 = "\
",
 113 = "-- Address of byteVar3 is 10 or 0xA",
 114 = "\
",
 115 = "byteVar1",
 116 = " ",
 117 = "=",
 118 = " ",
 119 = "11",
 120 = "\
",
 121 = "-- Address of byteVar3 is still 10, not 11 or 0xB",
 122 = "\
",
 123 = "\
",
 124 = "-- Not setting a variable name with '>' implies that you want to just modify or get at that address",
 125 = "\
",
 126 = "byte",
 127 = " ",
 128 = ">",
 129 = " ",
 130 = "0xC000",
 131 = " ",
 132 = "=",
 133 = " ",
 134 = "98",
 135 = "\
",
 136 = "-- You can use variables here",
 137 = "\
",
 138 = "byte",
 139 = " ",
 140 = ">",
 141 = " ",
 142 = "byteVar1",
 143 = " ",
 144 = "=",
 145 = " ",
 146 = "98",
 147 = "\
",
 148 = "\
",
 149 = "-- You can increment/decrement a variable like this",
 150 = "\
",
 151 = "wordVar1",
 152 = "+",
 153 = "=",
 154 = " ",
 155 = "-- Increment by 1",
 156 = "\
",
 157 = "wordVar1",
 158 = "-",
 159 = "=",
 160 = " ",
 161 = "-- Decrement by 1",
 162 = "\
",
 163 = "wordVar1",
 164 = "+",
 165 = "=",
 166 = " ",
 167 = "5",
 168 = " ",
 169 = "-- Increment by 5",
 170 = "\
",
 171 = "wordVar1",
 172 = "-",
 173 = "=",
 174 = " ",
 175 = "5",
 176 = " ",
 177 = "-- Decrement by 5",
 178 = "\
",
 179 = "\
",
 180 = "\
",
 181 = "-- You can get a pointer to a value by putting '*' in front",
 182 = "\
",
 183 = "qword",
 184 = " ",
 185 = "pointerVal",
 186 = " ",
 187 = "=",
 188 = " ",
 189 = "*",
 190 = "byteVar2",
 191 = "\
",
 192 = "-- You can declare something as an array by tagging [] onto it. Works for byte, word, dword, and qword",
 193 = "\
",
 194 = "byte",
 195 = "[",
 196 = "]",
 197 = " ",
 198 = "byteArray1",
 199 = " ",
 200 = "=",
 201 = " ",
 202 = "{",
 203 = "10",
 204 = ",",
 205 = "20",
 206 = ",",
 207 = "30",
 208 = ",",
 209 = "40",
 210 = ",",
 211 = "50",
 212 = "}",
 213 = "\
",
 214 = "word",
 215 = "[",
 216 = "]",
 217 = " ",
 218 = "wordArray1",
 219 = " ",
 220 = "=",
 221 = " ",
 222 = "{",
 223 = "1372",
 224 = ",",
 225 = "257",
 226 = ",",
 227 = "890",
 228 = ",",
 229 = "102",
 230 = "}",
 231 = "\
",
 232 = "dword",
 233 = "[",
 234 = "]",
 235 = " ",
 236 = "dwordArray",
 237 = " ",
 238 = "=",
 239 = " ",
 240 = "{",
 241 = "4628916312",
 242 = ",",
 243 = "9462754714",
 244 = "}",
 245 = "\
",
 246 = "qword",
 247 = "[",
 248 = "]",
 249 = " ",
 250 = "qwordArray",
 251 = " ",
 252 = "=",
 253 = " ",
 254 = "{",
 255 = "1471395",
 256 = ",",
 257 = "1241052",
 258 = ",",
 259 = "123694",
 260 = "}",
 261 = "\
",
 262 = "-- These will by default be size of set values (4 values in a byte array means 4 bytes allocated)",
 263 = "\
",
 264 = "-- You can set the specific size of the array by putting a number in []",
 265 = "\
",
 266 = "byte",
 267 = "[",
 268 = "32",
 269 = "]",
 270 = " ",
 271 = "byteArray2",
 272 = " ",
 273 = "=",
 274 = " ",
 275 = "{",
 276 = "50",
 277 = ",",
 278 = "40",
 279 = ",",
 280 = "30",
 281 = ",",
 282 = "20",
 283 = ",",
 284 = "10",
 285 = "}",
 286 = " ",
 287 = "-- 32 bytes",
 288 = "\
",
 289 = "word",
 290 = "[",
 291 = "32",
 292 = "]",
 293 = " ",
 294 = "wordArray2",
 295 = " ",
 296 = "=",
 297 = " ",
 298 = "{",
 299 = "982",
 300 = ",",
 301 = "742",
 302 = ",",
 303 = "164",
 304 = ",",
 305 = "473",
 306 = "}",
 307 = " ",
 308 = "-- 32 words, 64 bytes",
 309 = "\
",
 310 = "-- You can put characters into arrays",
 311 = "\
",
 312 = "byte",
 313 = "[",
 314 = "]",
 315 = " ",
 316 = "charArray",
 317 = " ",
 318 = "=",
 319 = " ",
 320 = "\"Hello, chars!\"",
 321 = " ",
 322 = "-- Note, there is no null byte at the end",
 323 = "\
",
 324 = "-- Strings are slightly different than byte arrays as they add a null byte automatically.",
 325 = "\
",
 326 = "-- Otherwise, they are identical",
 327 = "\
",
 328 = "string",
 329 = " ",
 330 = "stringVar1",
 331 = " ",
 332 = "=",
 333 = " ",
 334 = "\"Hello, world!\"",
 335 = " ",
 336 = "-- is actually \"Hello, world!\\0\"",
 337 = "\
",
 338 = "-- Here shows the difference between them",
 339 = "\
",
 340 = "byte",
 341 = "[",
 342 = "]",
 343 = " ",
 344 = "notAString",
 345 = " ",
 346 = "=",
 347 = " ",
 348 = "\"String\"",
 349 = " ",
 350 = "-- is actually \"String\"",
 351 = "\
",
 352 = "string",
 353 = " ",
 354 = "isAString",
 355 = " ",
 356 = "=",
 357 = " ",
 358 = "\"String\"",
 359 = " ",
 360 = "-- is actually \"String\\0\"",
 361 = "\
",
 362 = "-- You can also tag on a [] but do be aware you need to leave room for the null byte",
 363 = "\
",
 364 = "string",
 365 = "[",
 366 = "6",
 367 = "]",
 368 = " ",
 369 = "helloString",
 370 = " ",
 371 = "=",
 372 = " ",
 373 = "\"hello\"",
 374 = " ",
 375 = "-- 6 bytes in total 'h','e','l','l','o','\\0'",
 376 = "\
",
 377 = "-- string[5] helloString = \"hello\" -- would cause a size_overflow warning",
 378 = "\
",
 379 = "\
",
 380 = "-- Conditionals",
 381 = "\
",
 382 = "-- Code will run inside of a conditional statement as long as the value isn't 0 if no operand is present",
 383 = "\
",
 384 = "if",
 385 = " ",
 386 = "true",
 387 = " ",
 388 = "then",
 389 = "\
",
 390 = " ",
 391 = " ",
 392 = " ",
 393 = " ",
 394 = "-- This if statement will always execute the code here",
 395 = "\
",
 396 = "end",
 397 = "\
",
 398 = "if",
 399 = " ",
 400 = "false",
 401 = " ",
 402 = "then",
 403 = "\
",
 404 = " ",
 405 = " ",
 406 = " ",
 407 = " ",
 408 = "-- This if statement will never execute the code here",
 409 = "\
",
 410 = "end",
 411 = "\
",
 412 = "-- Parentheses are optional, and if you use them no spaces are needed between keywords",
 413 = "\
",
 414 = "if",
 415 = "(",
 416 = "true",
 417 = ")",
 418 = "then",
 419 = "\
",
 420 = " ",
 421 = " ",
 422 = " ",
 423 = " ",
 424 = "-- This is valid",
 425 = "\
",
 426 = "end",
 427 = "\
",
 428 = "if",
 429 = " ",
 430 = "(",
 431 = "true",
 432 = ")",
 433 = " ",
 434 = "then",
 435 = "\
",
 436 = " ",
 437 = " ",
 438 = " ",
 439 = " ",
 440 = "-- So is this",
 441 = "\
",
 442 = "end",
 443 = "\
",
 444 = "\
",
 445 = "-- You can use variables in an if statement (obviously)",
 446 = "\
",
 447 = "if",
 448 = " ",
 449 = "byteVar2",
 450 = " ",
 451 = "then",
 452 = " ",
 453 = "-- byteVar2 is 1, so it's true",
 454 = "\
",
 455 = " ",
 456 = " ",
 457 = " ",
 458 = " ",
 459 = "-- This code will run",
 460 = "\
",
 461 = "end",
 462 = "\
",
 463 = "if",
 464 = " ",
 465 = "byteVar2",
 466 = " ",
 467 = "then",
 468 = " ",
 469 = "-- byteVar3 is 0, so it is false",
 470 = "\
",
 471 = " ",
 472 = " ",
 473 = " ",
 474 = " ",
 475 = "-- This code will NOT run",
 476 = "\
",
 477 = "end",
 478 = "\
",
 479 = "if",
 480 = " ",
 481 = "byteVar1",
 482 = " ",
 483 = "then",
 484 = " ",
 485 = "-- byteVar1 is 11, so it's true as it's not 0",
 486 = "\
",
 487 = " ",
 488 = " ",
 489 = " ",
 490 = " ",
 491 = "-- This code will run",
 492 = "\
",
 493 = "end",
 494 = "\
",
 495 = "\
",
 496 = "-- Comparisons are as follows",
 497 = "\
",
 498 = "-- val1 == val2 - run if equal",
 499 = "\
",
 500 = "-- val1 != val2 - run if not equal",
 501 = "\
",
 502 = "-- val1 > val2 - run if val1 is greater than val2",
 503 = "\
",
 504 = "-- val1 < val2 - run if val1 is less than val2",
 505 = "\
",
 506 = "-- val1 >= val2 - run if val1 is greater than or equal to val2",
 507 = "\
",
 508 = "-- val1 <= val2 - run if val1 is less than or equal to val2",
 509 = "\
",
 510 = "\
",
 511 = "-- Bool operations are as follows",
 512 = "\
",
 513 = "-- not val - returns opposite bool result of val1",
 514 = "\
",
 515 = "-- val1 or val2 - returns true if either val1 or val2 is true",
 516 = "\
",
 517 = "-- val1 and val2 - returns true if both val1 and val2 is true",
 518 = "\
",
 519 = "\
",
 520 = "-- not takes highest priority and computes first, then or+and",
 521 = "\
",
 522 = "-- not true or false - (not true) or false - false or false - false",
 523 = "\
",
 524 = "-- not false or true - (not false) or true - true or true - true",
 525 = "\
",
 526 = "\
",
 527 = "if",
 528 = " ",
 529 = "true",
 530 = " ",
 531 = "==",
 532 = " ",
 533 = "true",
 534 = " ",
 535 = "then",
 536 = "\
",
 537 = " ",
 538 = " ",
 539 = " ",
 540 = " ",
 541 = "-- This code will run",
 542 = "\
",
 543 = "end",
 544 = "\
",
 545 = "if",
 546 = " ",
 547 = "byteVal1",
 548 = " ",
 549 = "==",
 550 = " ",
 551 = "byteVal2",
 552 = " ",
 553 = "then",
 554 = " ",
 555 = "-- byteVal1 is 11 and byteVal2 is 0. They are not equal",
 556 = "\
",
 557 = " ",
 558 = " ",
 559 = " ",
 560 = " ",
 561 = "-- This code will not run as they must be equal",
 562 = "\
",
 563 = "end",
 564 = "\
",
 565 = "if",
 566 = " ",
 567 = "byteVal1",
 568 = " ",
 569 = "!=",
 570 = " ",
 571 = "byteVal2",
 572 = " ",
 573 = "then",
 574 = " ",
 575 = "-- byteVal1 is 11 and byteVal2 is 0. They are not equal",
 576 = "\
",
 577 = " ",
 578 = " ",
 579 = " ",
 580 = " ",
 581 = "-- This code will run as they are not equal",
 582 = "\
",
 583 = "end",
 584 = "\
",
 585 = "if",
 586 = " ",
 587 = "byteVal1",
 588 = " ",
 589 = ">",
 590 = " ",
 591 = "byteVal2",
 592 = " ",
 593 = "then",
 594 = " ",
 595 = "-- byteVal1 is 11 and byteVal2 is 0. val1 is greater than val2",
 596 = "\
",
 597 = " ",
 598 = " ",
 599 = " ",
 600 = " ",
 601 = "-- This code will run as val1 is greater than val2",
 602 = "\
",
 603 = "end",
 604 = "\
",
 605 = "if",
 606 = " ",
 607 = "byteVal1",
 608 = " ",
 609 = "<",
 610 = " ",
 611 = "byteVal2",
 612 = " ",
 613 = "then",
 614 = " ",
 615 = "-- byteVal1 is 11 and byteVal2 is 0. val1 is not greater than val2",
 616 = "\
",
 617 = " ",
 618 = " ",
 619 = " ",
 620 = " ",
 621 = "-- This code will not run as val1 must be less than val2",
 622 = "\
",
 623 = "end",
 624 = "\
",
 625 = "if",
 626 = " ",
 627 = "true",
 628 = " ",
 629 = "or",
 630 = " ",
 631 = "false",
 632 = " ",
 633 = "then",
 634 = " ",
 635 = "-- true is true, so false will not be checked",
 636 = "\
",
 637 = " ",
 638 = " ",
 639 = " ",
 640 = " ",
 641 = "-- This code will run",
 642 = "\
",
 643 = "end",
 644 = "\
",
 645 = "if",
 646 = " ",
 647 = "false",
 648 = " ",
 649 = "or",
 650 = " ",
 651 = "true",
 652 = " ",
 653 = "then",
 654 = " ",
 655 = "-- false is false, so true will be checked. It is true so the code will be ran.",
 656 = "\
",
 657 = " ",
 658 = " ",
 659 = " ",
 660 = " ",
 661 = "-- This code will run",
 662 = "\
",
 663 = "end",
 664 = "\
",
 665 = "if",
 666 = " ",
 667 = "false",
 668 = " ",
 669 = "or",
 670 = " ",
 671 = "false",
 672 = " ",
 673 = "or",
 674 = " ",
 675 = "true",
 676 = " ",
 677 = "-- These are checked sequentially",
 678 = "\
",
 679 = " ",
 680 = " ",
 681 = " ",
 682 = " ",
 683 = "-- This code will run",
 684 = "\
",
 685 = "end",
 686 = "\
",
 687 = "if",
 688 = " ",
 689 = "true",
 690 = " ",
 691 = "and",
 692 = " ",
 693 = "false",
 694 = " ",
 695 = "-- true is true, checking next. false is false, don't run code.",
 696 = "\
",
 697 = " ",
 698 = " ",
 699 = " ",
 700 = " ",
 701 = "-- This code will not run",
 702 = "\
",
 703 = "end",
 704 = "\
",
 705 = "if",
 706 = " ",
 707 = "true",
 708 = " ",
 709 = "and",
 710 = " ",
 711 = "true",
 712 = " ",
 713 = "-- true is true, checking next. true is true, run code.",
 714 = "\
",
 715 = " ",
 716 = " ",
 717 = " ",
 718 = " ",
 719 = "-- This code will run",
 720 = "\
",
 721 = "end",
 722 = "\
",
 723 = "if",
 724 = " ",
 725 = "true",
 726 = " ",
 727 = "and",
 728 = " ",
 729 = "true",
 730 = " ",
 731 = "and",
 732 = " ",
 733 = "true",
 734 = " ",
 735 = "-- Same as before, these are checked sequentially",
 736 = "\
",
 737 = " ",
 738 = " ",
 739 = " ",
 740 = " ",
 741 = "-- This code will run",
 742 = "\
",
 743 = "end",
 744 = "\
",
 745 = "\
",
 746 = "while",
 747 = " ",
 748 = "true",
 749 = " ",
 750 = "do",
 751 = " ",
 752 = "-- Condition is checked BEFORE executing, not after!",
 753 = "\
",
 754 = "\
",
 755 = "end",
 756 = "\
",
 757 = "\
",
 758 = "word",
 759 = " ",
 760 = "i",
 761 = "\
",
 762 = "\
",
 763 = "for",
 764 = " ",
 765 = "i",
 766 = "=",
 767 = "0",
 768 = ",",
 769 = "10",
 770 = " ",
 771 = "do",
 772 = "\
",
 773 = "\
",
 774 = "end",
 775 = "\
",
 776 = "\
",
 777 = "function",
 778 = " ",
 779 = "exampleFunction",
 780 = "(",
 781 = ")",
 782 = "\
",
 783 = "\
",
 784 = "end",
}
{
 1 = "comment",
 2 = "newline",
 3 = "newline",
 4 = "comment",
 5 = "newline",
 6 = "comment",
 7 = "newline",
 8 = "comment",
 9 = "newline",
 10 = "comment",
 11 = "newline",
 12 = "newline",
 13 = "comment",
 14 = "newline",
 15 = "comment",
 16 = "newline",
 17 = "newline",
 18 = "comment",
 19 = "newline",
 20 = "newline",
 21 = "comment",
 22 = "newline",
 23 = "comment",
 24 = "newline",
 25 = "comment",
 26 = "newline",
 27 = "comment",
 28 = "newline",
 29 = "comment",
 30 = "newline",
 31 = "newline",
 32 = "comment",
 33 = "newline",
 34 = "comment",
 35 = "newline",
 36 = "comment",
 37 = "newline",
 38 = "comment",
 39 = "newline",
 40 = "comment",
 41 = "newline",
 42 = "newline",
 43 = "comment",
 44 = "newline",
 45 = "data_type",
 46 = "whitespace",
 47 = "other",
 48 = "whitespace",
 49 = "math",
 50 = "whitespace",
 51 = "number",
 52 = "whitespace",
 53 = "comment",
 54 = "newline",
 55 = "data_type",
 56 = "whitespace",
 57 = "other",
 58 = "whitespace",
 59 = "math",
 60 = "whitespace",
 61 = "number",
 62 = "whitespace",
 63 = "comment",
 64 = "newline",
 65 = "data_type",
 66 = "whitespace",
 67 = "other",
 68 = "whitespace",
 69 = "math",
 70 = "whitespace",
 71 = "number",
 72 = "whitespace",
 73 = "comment",
 74 = "newline",
 75 = "data_type",
 76 = "whitespace",
 77 = "other",
 78 = "whitespace",
 79 = "math",
 80 = "whitespace",
 81 = "number",
 82 = "whitespace",
 83 = "comment",
 84 = "newline",
 85 = "comment",
 86 = "newline",
 87 = "data_type",
 88 = "whitespace",
 89 = "other",
 90 = "whitespace",
 91 = "conditional",
 92 = "whitespace",
 93 = "number",
 94 = "whitespace",
 95 = "math",
 96 = "whitespace",
 97 = "number",
 98 = "newline",
 99 = "comment",
 100 = "newline",
 101 = "data_type",
 102 = "whitespace",
 103 = "other",
 104 = "whitespace",
 105 = "conditional",
 106 = "whitespace",
 107 = "other",
 108 = "whitespace",
 109 = "math",
 110 = "whitespace",
 111 = "number",
 112 = "newline",
 113 = "comment",
 114 = "newline",
 115 = "other",
 116 = "whitespace",
 117 = "math",
 118 = "whitespace",
 119 = "number",
 120 = "newline",
 121 = "comment",
 122 = "newline",
 123 = "newline",
 124 = "comment",
 125 = "newline",
 126 = "data_type",
 127 = "whitespace",
 128 = "conditional",
 129 = "whitespace",
 130 = "number",
 131 = "whitespace",
 132 = "math",
 133 = "whitespace",
 134 = "number",
 135 = "newline",
 136 = "comment",
 137 = "newline",
 138 = "data_type",
 139 = "whitespace",
 140 = "conditional",
 141 = "whitespace",
 142 = "other",
 143 = "whitespace",
 144 = "math",
 145 = "whitespace",
 146 = "number",
 147 = "newline",
 148 = "newline",
 149 = "comment",
 150 = "newline",
 151 = "other",
 152 = "math",
 153 = "math",
 154 = "whitespace",
 155 = "comment",
 156 = "newline",
 157 = "other",
 158 = "math",
 159 = "math",
 160 = "whitespace",
 161 = "comment",
 162 = "newline",
 163 = "other",
 164 = "math",
 165 = "math",
 166 = "whitespace",
 167 = "number",
 168 = "whitespace",
 169 = "comment",
 170 = "newline",
 171 = "other",
 172 = "math",
 173 = "math",
 174 = "whitespace",
 175 = "number",
 176 = "whitespace",
 177 = "comment",
 178 = "newline",
 179 = "newline",
 180 = "newline",
 181 = "comment",
 182 = "newline",
 183 = "data_type",
 184 = "whitespace",
 185 = "other",
 186 = "whitespace",
 187 = "math",
 188 = "whitespace",
 189 = "math",
 190 = "other",
 191 = "newline",
 192 = "comment",
 193 = "newline",
 194 = "data_type",
 195 = "open_bracket",
 196 = "close_bracket",
 197 = "whitespace",
 198 = "other",
 199 = "whitespace",
 200 = "math",
 201 = "whitespace",
 202 = "open_bracket",
 203 = "number",
 204 = "seperator",
 205 = "number",
 206 = "seperator",
 207 = "number",
 208 = "seperator",
 209 = "number",
 210 = "seperator",
 211 = "number",
 212 = "close_bracket",
 213 = "newline",
 214 = "data_type",
 215 = "open_bracket",
 216 = "close_bracket",
 217 = "whitespace",
 218 = "other",
 219 = "whitespace",
 220 = "math",
 221 = "whitespace",
 222 = "open_bracket",
 223 = "number",
 224 = "seperator",
 225 = "number",
 226 = "seperator",
 227 = "number",
 228 = "seperator",
 229 = "number",
 230 = "close_bracket",
 231 = "newline",
 232 = "data_type",
 233 = "open_bracket",
 234 = "close_bracket",
 235 = "whitespace",
 236 = "other",
 237 = "whitespace",
 238 = "math",
 239 = "whitespace",
 240 = "open_bracket",
 241 = "number",
 242 = "seperator",
 243 = "number",
 244 = "close_bracket",
 245 = "newline",
 246 = "data_type",
 247 = "open_bracket",
 248 = "close_bracket",
 249 = "whitespace",
 250 = "other",
 251 = "whitespace",
 252 = "math",
 253 = "whitespace",
 254 = "open_bracket",
 255 = "number",
 256 = "seperator",
 257 = "number",
 258 = "seperator",
 259 = "number",
 260 = "close_bracket",
 261 = "newline",
 262 = "comment",
 263 = "newline",
 264 = "comment",
 265 = "newline",
 266 = "data_type",
 267 = "open_bracket",
 268 = "number",
 269 = "close_bracket",
 270 = "whitespace",
 271 = "other",
 272 = "whitespace",
 273 = "math",
 274 = "whitespace",
 275 = "open_bracket",
 276 = "number",
 277 = "seperator",
 278 = "number",
 279 = "seperator",
 280 = "number",
 281 = "seperator",
 282 = "number",
 283 = "seperator",
 284 = "number",
 285 = "close_bracket",
 286 = "whitespace",
 287 = "comment",
 288 = "newline",
 289 = "data_type",
 290 = "open_bracket",
 291 = "number",
 292 = "close_bracket",
 293 = "whitespace",
 294 = "other",
 295 = "whitespace",
 296 = "math",
 297 = "whitespace",
 298 = "open_bracket",
 299 = "number",
 300 = "seperator",
 301 = "number",
 302 = "seperator",
 303 = "number",
 304 = "seperator",
 305 = "number",
 306 = "close_bracket",
 307 = "whitespace",
 308 = "comment",
 309 = "newline",
 310 = "comment",
 311 = "newline",
 312 = "data_type",
 313 = "open_bracket",
 314 = "close_bracket",
 315 = "whitespace",
 316 = "other",
 317 = "whitespace",
 318 = "math",
 319 = "whitespace",
 320 = "string",
 321 = "whitespace",
 322 = "comment",
 323 = "newline",
 324 = "comment",
 325 = "newline",
 326 = "comment",
 327 = "newline",
 328 = "data_type",
 329 = "whitespace",
 330 = "other",
 331 = "whitespace",
 332 = "math",
 333 = "whitespace",
 334 = "string",
 335 = "whitespace",
 336 = "comment",
 337 = "newline",
 338 = "comment",
 339 = "newline",
 340 = "data_type",
 341 = "open_bracket",
 342 = "close_bracket",
 343 = "whitespace",
 344 = "other",
 345 = "whitespace",
 346 = "math",
 347 = "whitespace",
 348 = "string",
 349 = "whitespace",
 350 = "comment",
 351 = "newline",
 352 = "data_type",
 353 = "whitespace",
 354 = "other",
 355 = "whitespace",
 356 = "math",
 357 = "whitespace",
 358 = "string",
 359 = "whitespace",
 360 = "comment",
 361 = "newline",
 362 = "comment",
 363 = "newline",
 364 = "data_type",
 365 = "open_bracket",
 366 = "number",
 367 = "close_bracket",
 368 = "whitespace",
 369 = "other",
 370 = "whitespace",
 371 = "math",
 372 = "whitespace",
 373 = "string",
 374 = "whitespace",
 375 = "comment",
 376 = "newline",
 377 = "comment",
 378 = "newline",
 379 = "newline",
 380 = "comment",
 381 = "newline",
 382 = "comment",
 383 = "newline",
 384 = "keyword",
 385 = "whitespace",
 386 = "constant",
 387 = "whitespace",
 388 = "keyword",
 389 = "newline",
 390 = "whitespace",
 391 = "whitespace",
 392 = "whitespace",
 393 = "whitespace",
 394 = "comment",
 395 = "newline",
 396 = "keyword",
 397 = "newline",
 398 = "keyword",
 399 = "whitespace",
 400 = "constant",
 401 = "whitespace",
 402 = "keyword",
 403 = "newline",
 404 = "whitespace",
 405 = "whitespace",
 406 = "whitespace",
 407 = "whitespace",
 408 = "comment",
 409 = "newline",
 410 = "keyword",
 411 = "newline",
 412 = "comment",
 413 = "newline",
 414 = "keyword",
 415 = "open_bracket",
 416 = "constant",
 417 = "close_bracket",
 418 = "keyword",
 419 = "newline",
 420 = "whitespace",
 421 = "whitespace",
 422 = "whitespace",
 423 = "whitespace",
 424 = "comment",
 425 = "newline",
 426 = "keyword",
 427 = "newline",
 428 = "keyword",
 429 = "whitespace",
 430 = "open_bracket",
 431 = "constant",
 432 = "close_bracket",
 433 = "whitespace",
 434 = "keyword",
 435 = "newline",
 436 = "whitespace",
 437 = "whitespace",
 438 = "whitespace",
 439 = "whitespace",
 440 = "comment",
 441 = "newline",
 442 = "keyword",
 443 = "newline",
 444 = "newline",
 445 = "comment",
 446 = "newline",
 447 = "keyword",
 448 = "whitespace",
 449 = "other",
 450 = "whitespace",
 451 = "keyword",
 452 = "whitespace",
 453 = "comment",
 454 = "newline",
 455 = "whitespace",
 456 = "whitespace",
 457 = "whitespace",
 458 = "whitespace",
 459 = "comment",
 460 = "newline",
 461 = "keyword",
 462 = "newline",
 463 = "keyword",
 464 = "whitespace",
 465 = "other",
 466 = "whitespace",
 467 = "keyword",
 468 = "whitespace",
 469 = "comment",
 470 = "newline",
 471 = "whitespace",
 472 = "whitespace",
 473 = "whitespace",
 474 = "whitespace",
 475 = "comment",
 476 = "newline",
 477 = "keyword",
 478 = "newline",
 479 = "keyword",
 480 = "whitespace",
 481 = "other",
 482 = "whitespace",
 483 = "keyword",
 484 = "whitespace",
 485 = "comment",
 486 = "newline",
 487 = "whitespace",
 488 = "whitespace",
 489 = "whitespace",
 490 = "whitespace",
 491 = "comment",
 492 = "newline",
 493 = "keyword",
 494 = "newline",
 495 = "newline",
 496 = "comment",
 497 = "newline",
 498 = "comment",
 499 = "newline",
 500 = "comment",
 501 = "newline",
 502 = "comment",
 503 = "newline",
 504 = "comment",
 505 = "newline",
 506 = "comment",
 507 = "newline",
 508 = "comment",
 509 = "newline",
 510 = "newline",
 511 = "comment",
 512 = "newline",
 513 = "comment",
 514 = "newline",
 515 = "comment",
 516 = "newline",
 517 = "comment",
 518 = "newline",
 519 = "newline",
 520 = "comment",
 521 = "newline",
 522 = "comment",
 523 = "newline",
 524 = "comment",
 525 = "newline",
 526 = "newline",
 527 = "keyword",
 528 = "whitespace",
 529 = "constant",
 530 = "whitespace",
 531 = "conditional",
 532 = "whitespace",
 533 = "constant",
 534 = "whitespace",
 535 = "keyword",
 536 = "newline",
 537 = "whitespace",
 538 = "whitespace",
 539 = "whitespace",
 540 = "whitespace",
 541 = "comment",
 542 = "newline",
 543 = "keyword",
 544 = "newline",
 545 = "keyword",
 546 = "whitespace",
 547 = "other",
 548 = "whitespace",
 549 = "conditional",
 550 = "whitespace",
 551 = "other",
 552 = "whitespace",
 553 = "keyword",
 554 = "whitespace",
 555 = "comment",
 556 = "newline",
 557 = "whitespace",
 558 = "whitespace",
 559 = "whitespace",
 560 = "whitespace",
 561 = "comment",
 562 = "newline",
 563 = "keyword",
 564 = "newline",
 565 = "keyword",
 566 = "whitespace",
 567 = "other",
 568 = "whitespace",
 569 = "conditional",
 570 = "whitespace",
 571 = "other",
 572 = "whitespace",
 573 = "keyword",
 574 = "whitespace",
 575 = "comment",
 576 = "newline",
 577 = "whitespace",
 578 = "whitespace",
 579 = "whitespace",
 580 = "whitespace",
 581 = "comment",
 582 = "newline",
 583 = "keyword",
 584 = "newline",
 585 = "keyword",
 586 = "whitespace",
 587 = "other",
 588 = "whitespace",
 589 = "conditional",
 590 = "whitespace",
 591 = "other",
 592 = "whitespace",
 593 = "keyword",
 594 = "whitespace",
 595 = "comment",
 596 = "newline",
 597 = "whitespace",
 598 = "whitespace",
 599 = "whitespace",
 600 = "whitespace",
 601 = "comment",
 602 = "newline",
 603 = "keyword",
 604 = "newline",
 605 = "keyword",
 606 = "whitespace",
 607 = "other",
 608 = "whitespace",
 609 = "conditional",
 610 = "whitespace",
 611 = "other",
 612 = "whitespace",
 613 = "keyword",
 614 = "whitespace",
 615 = "comment",
 616 = "newline",
 617 = "whitespace",
 618 = "whitespace",
 619 = "whitespace",
 620 = "whitespace",
 621 = "comment",
 622 = "newline",
 623 = "keyword",
 624 = "newline",
 625 = "keyword",
 626 = "whitespace",
 627 = "constant",
 628 = "whitespace",
 629 = "operator",
 630 = "whitespace",
 631 = "constant",
 632 = "whitespace",
 633 = "keyword",
 634 = "whitespace",
 635 = "comment",
 636 = "newline",
 637 = "whitespace",
 638 = "whitespace",
 639 = "whitespace",
 640 = "whitespace",
 641 = "comment",
 642 = "newline",
 643 = "keyword",
 644 = "newline",
 645 = "keyword",
 646 = "whitespace",
 647 = "constant",
 648 = "whitespace",
 649 = "operator",
 650 = "whitespace",
 651 = "constant",
 652 = "whitespace",
 653 = "keyword",
 654 = "whitespace",
 655 = "comment",
 656 = "newline",
 657 = "whitespace",
 658 = "whitespace",
 659 = "whitespace",
 660 = "whitespace",
 661 = "comment",
 662 = "newline",
 663 = "keyword",
 664 = "newline",
 665 = "keyword",
 666 = "whitespace",
 667 = "constant",
 668 = "whitespace",
 669 = "operator",
 670 = "whitespace",
 671 = "constant",
 672 = "whitespace",
 673 = "operator",
 674 = "whitespace",
 675 = "constant",
 676 = "whitespace",
 677 = "comment",
 678 = "newline",
 679 = "whitespace",
 680 = "whitespace",
 681 = "whitespace",
 682 = "whitespace",
 683 = "comment",
 684 = "newline",
 685 = "keyword",
 686 = "newline",
 687 = "keyword",
 688 = "whitespace",
 689 = "constant",
 690 = "whitespace",
 691 = "operator",
 692 = "whitespace",
 693 = "constant",
 694 = "whitespace",
 695 = "comment",
 696 = "newline",
 697 = "whitespace",
 698 = "whitespace",
 699 = "whitespace",
 700 = "whitespace",
 701 = "comment",
 702 = "newline",
 703 = "keyword",
 704 = "newline",
 705 = "keyword",
 706 = "whitespace",
 707 = "constant",
 708 = "whitespace",
 709 = "operator",
 710 = "whitespace",
 711 = "constant",
 712 = "whitespace",
 713 = "comment",
 714 = "newline",
 715 = "whitespace",
 716 = "whitespace",
 717 = "whitespace",
 718 = "whitespace",
 719 = "comment",
 720 = "newline",
 721 = "keyword",
 722 = "newline",
 723 = "keyword",
 724 = "whitespace",
 725 = "constant",
 726 = "whitespace",
 727 = "operator",
 728 = "whitespace",
 729 = "constant",
 730 = "whitespace",
 731 = "operator",
 732 = "whitespace",
 733 = "constant",
 734 = "whitespace",
 735 = "comment",
 736 = "newline",
 737 = "whitespace",
 738 = "whitespace",
 739 = "whitespace",
 740 = "whitespace",
 741 = "comment",
 742 = "newline",
 743 = "keyword",
 744 = "newline",
 745 = "newline",
 746 = "keyword",
 747 = "whitespace",
 748 = "constant",
 749 = "whitespace",
 750 = "keyword",
 751 = "whitespace",
 752 = "comment",
 753 = "newline",
 754 = "newline",
 755 = "keyword",
 756 = "newline",
 757 = "newline",
 758 = "data_type",
 759 = "whitespace",
 760 = "other",
 761 = "newline",
 762 = "newline",
 763 = "keyword",
 764 = "whitespace",
 765 = "other",
 766 = "math",
 767 = "number",
 768 = "seperator",
 769 = "number",
 770 = "whitespace",
 771 = "keyword",
 772 = "newline",
 773 = "newline",
 774 = "keyword",
 775 = "newline",
 776 = "newline",
 777 = "keyword",
 778 = "whitespace",
 779 = "other",
 780 = "open_bracket",
 781 = "close_bracket",
 782 = "newline",
 783 = "newline",
 784 = "keyword",
}
{
 1 = 1,
 2 = 25,
 3 = 26,
 4 = 27,
 5 = 39,
 6 = 40,
 7 = 51,
 8 = 52,
 9 = 64,
 10 = 65,
 11 = 149,
 12 = 150,
 13 = 151,
 14 = 167,
 15 = 168,
 16 = 243,
 17 = 244,
 18 = 245,
 19 = 307,
 20 = 308,
 21 = 309,
 22 = 327,
 23 = 328,
 24 = 398,
 25 = 399,
 26 = 476,
 27 = 477,
 28 = 516,
 29 = 517,
 30 = 566,
 31 = 567,
 32 = 568,
 33 = 580,
 34 = 581,
 35 = 676,
 36 = 677,
 37 = 765,
 38 = 766,
 39 = 826,
 40 = 827,
 41 = 912,
 42 = 913,
 43 = 914,
 44 = 1003,
 45 = 1004,
 46 = 1008,
 47 = 1009,
 48 = 1017,
 49 = 1018,
 50 = 1019,
 51 = 1020,
 52 = 1022,
 53 = 1023,
 54 = 1049,
 55 = 1050,
 56 = 1054,
 57 = 1055,
 58 = 1063,
 59 = 1064,
 60 = 1065,
 61 = 1066,
 62 = 1069,
 63 = 1070,
 64 = 1115,
 65 = 1116,
 66 = 1121,
 67 = 1122,
 68 = 1131,
 69 = 1132,
 70 = 1133,
 71 = 1134,
 72 = 1144,
 73 = 1145,
 74 = 1191,
 75 = 1192,
 76 = 1197,
 77 = 1198,
 78 = 1207,
 79 = 1208,
 80 = 1209,
 81 = 1210,
 82 = 1222,
 83 = 1223,
 84 = 1269,
 85 = 1270,
 86 = 1325,
 87 = 1326,
 88 = 1330,
 89 = 1331,
 90 = 1339,
 91 = 1340,
 92 = 1341,
 93 = 1342,
 94 = 1348,
 95 = 1349,
 96 = 1350,
 97 = 1351,
 98 = 1352,
 99 = 1353,
 100 = 1444,
 101 = 1445,
 102 = 1449,
 103 = 1450,
 104 = 1458,
 105 = 1459,
 106 = 1460,
 107 = 1461,
 108 = 1469,
 109 = 1470,
 110 = 1471,
 111 = 1472,
 112 = 1473,
 113 = 1474,
 114 = 1509,
 115 = 1510,
 116 = 1518,
 117 = 1519,
 118 = 1520,
 119 = 1521,
 120 = 1523,
 121 = 1524,
 122 = 1573,
 123 = 1574,
 124 = 1575,
 125 = 1674,
 126 = 1675,
 127 = 1679,
 128 = 1680,
 129 = 1681,
 130 = 1682,
 131 = 1688,
 132 = 1689,
 133 = 1690,
 134 = 1691,
 135 = 1693,
 136 = 1694,
 137 = 1723,
 138 = 1724,
 139 = 1728,
 140 = 1729,
 141 = 1730,
 142 = 1731,
 143 = 1739,
 144 = 1740,
 145 = 1741,
 146 = 1742,
 147 = 1744,
 148 = 1745,
 149 = 1746,
 150 = 1797,
 151 = 1798,
 152 = 1806,
 153 = 1807,
 154 = 1808,
 155 = 1809,
 156 = 1826,
 157 = 1827,
 158 = 1835,
 159 = 1836,
 160 = 1837,
 161 = 1838,
 162 = 1855,
 163 = 1856,
 164 = 1864,
 165 = 1865,
 166 = 1866,
 167 = 1867,
 168 = 1868,
 169 = 1869,
 170 = 1886,
 171 = 1887,
 172 = 1895,
 173 = 1896,
 174 = 1897,
 175 = 1898,
 176 = 1899,
 177 = 1900,
 178 = 1917,
 179 = 1918,
 180 = 1919,
 181 = 1920,
 182 = 1979,
 183 = 1980,
 184 = 1985,
 185 = 1986,
 186 = 1996,
 187 = 1997,
 188 = 1998,
 189 = 1999,
 190 = 2000,
 191 = 2008,
 192 = 2009,
 193 = 2111,
 194 = 2112,
 195 = 2116,
 196 = 2117,
 197 = 2118,
 198 = 2119,
 199 = 2129,
 200 = 2130,
 201 = 2131,
 202 = 2132,
 203 = 2133,
 204 = 2135,
 205 = 2136,
 206 = 2138,
 207 = 2139,
 208 = 2141,
 209 = 2142,
 210 = 2144,
 211 = 2145,
 212 = 2147,
 213 = 2148,
 214 = 2149,
 215 = 2153,
 216 = 2154,
 217 = 2155,
 218 = 2156,
 219 = 2166,
 220 = 2167,
 221 = 2168,
 222 = 2169,
 223 = 2170,
 224 = 2174,
 225 = 2175,
 226 = 2178,
 227 = 2179,
 228 = 2182,
 229 = 2183,
 230 = 2186,
 231 = 2187,
 232 = 2188,
 233 = 2193,
 234 = 2194,
 235 = 2195,
 236 = 2196,
 237 = 2206,
 238 = 2207,
 239 = 2208,
 240 = 2209,
 241 = 2210,
 242 = 2220,
 243 = 2221,
 244 = 2231,
 245 = 2232,
 246 = 2233,
 247 = 2238,
 248 = 2239,
 249 = 2240,
 250 = 2241,
 251 = 2251,
 252 = 2252,
 253 = 2253,
 254 = 2254,
 255 = 2255,
 256 = 2262,
 257 = 2263,
 258 = 2270,
 259 = 2271,
 260 = 2277,
 261 = 2278,
 262 = 2279,
 263 = 2376,
 264 = 2377,
 265 = 2448,
 266 = 2449,
 267 = 2453,
 268 = 2454,
 269 = 2456,
 270 = 2457,
 271 = 2458,
 272 = 2468,
 273 = 2469,
 274 = 2470,
 275 = 2471,
 276 = 2472,
 277 = 2474,
 278 = 2475,
 279 = 2477,
 280 = 2478,
 281 = 2480,
 282 = 2481,
 283 = 2483,
 284 = 2484,
 285 = 2486,
 286 = 2487,
 287 = 2488,
 288 = 2499,
 289 = 2500,
 290 = 2504,
 291 = 2505,
 292 = 2507,
 293 = 2508,
 294 = 2509,
 295 = 2519,
 296 = 2520,
 297 = 2521,
 298 = 2522,
 299 = 2523,
 300 = 2526,
 301 = 2527,
 302 = 2530,
 303 = 2531,
 304 = 2534,
 305 = 2535,
 306 = 2538,
 307 = 2539,
 308 = 2540,
 309 = 2561,
 310 = 2562,
 311 = 2599,
 312 = 2600,
 313 = 2604,
 314 = 2605,
 315 = 2606,
 316 = 2607,
 317 = 2616,
 318 = 2617,
 319 = 2618,
 320 = 2619,
 321 = 2634,
 322 = 2635,
 323 = 2676,
 324 = 2677,
 325 = 2766,
 326 = 2767,
 327 = 2799,
 328 = 2800,
 329 = 2806,
 330 = 2807,
 331 = 2817,
 332 = 2818,
 333 = 2819,
 334 = 2820,
 335 = 2835,
 336 = 2836,
 337 = 2868,
 338 = 2869,
 339 = 2910,
 340 = 2911,
 341 = 2915,
 342 = 2916,
 343 = 2917,
 344 = 2918,
 345 = 2928,
 346 = 2929,
 347 = 2930,
 348 = 2931,
 349 = 2939,
 350 = 2940,
 351 = 2963,
 352 = 2964,
 353 = 2970,
 354 = 2971,
 355 = 2980,
 356 = 2981,
 357 = 2982,
 358 = 2983,
 359 = 2991,
 360 = 2992,
 361 = 3017,
 362 = 3018,
 363 = 3102,
 364 = 3103,
 365 = 3109,
 366 = 3110,
 367 = 3111,
 368 = 3112,
 369 = 3113,
 370 = 3124,
 371 = 3125,
 372 = 3126,
 373 = 3127,
 374 = 3134,
 375 = 3135,
 376 = 3179,
 377 = 3180,
 378 = 3253,
 379 = 3254,
 380 = 3255,
 381 = 3270,
 382 = 3271,
 383 = 3375,
 384 = 3376,
 385 = 3378,
 386 = 3379,
 387 = 3383,
 388 = 3384,
 389 = 3388,
 390 = 3389,
 391 = 3390,
 392 = 3391,
 393 = 3392,
 394 = 3393,
 395 = 3447,
 396 = 3448,
 397 = 3451,
 398 = 3452,
 399 = 3454,
 400 = 3455,
 401 = 3460,
 402 = 3461,
 403 = 3465,
 404 = 3466,
 405 = 3467,
 406 = 3468,
 407 = 3469,
 408 = 3470,
 409 = 3523,
 410 = 3524,
 411 = 3527,
 412 = 3528,
 413 = 3614,
 414 = 3615,
 415 = 3617,
 416 = 3618,
 417 = 3622,
 418 = 3623,
 419 = 3627,
 420 = 3628,
 421 = 3629,
 422 = 3630,
 423 = 3631,
 424 = 3632,
 425 = 3648,
 426 = 3649,
 427 = 3652,
 428 = 3653,
 429 = 3655,
 430 = 3656,
 431 = 3657,
 432 = 3661,
 433 = 3662,
 434 = 3663,
 435 = 3667,
 436 = 3668,
 437 = 3669,
 438 = 3670,
 439 = 3671,
 440 = 3672,
 441 = 3685,
 442 = 3686,
 443 = 3689,
 444 = 3690,
 445 = 3691,
 446 = 3746,
 447 = 3747,
 448 = 3749,
 449 = 3750,
 450 = 3758,
 451 = 3759,
 452 = 3763,
 453 = 3764,
 454 = 3794,
 455 = 3795,
 456 = 3796,
 457 = 3797,
 458 = 3798,
 459 = 3799,
 460 = 3820,
 461 = 3821,
 462 = 3824,
 463 = 3825,
 464 = 3827,
 465 = 3828,
 466 = 3836,
 467 = 3837,
 468 = 3841,
 469 = 3842,
 470 = 3874,
 471 = 3875,
 472 = 3876,
 473 = 3877,
 474 = 3878,
 475 = 3879,
 476 = 3904,
 477 = 3905,
 478 = 3908,
 479 = 3909,
 480 = 3911,
 481 = 3912,
 482 = 3920,
 483 = 3921,
 484 = 3925,
 485 = 3926,
 486 = 3971,
 487 = 3972,
 488 = 3973,
 489 = 3974,
 490 = 3975,
 491 = 3976,
 492 = 3997,
 493 = 3998,
 494 = 4001,
 495 = 4002,
 496 = 4003,
 497 = 4032,
 498 = 4033,
 499 = 4063,
 500 = 4064,
 501 = 4098,
 502 = 4099,
 503 = 4148,
 504 = 4149,
 505 = 4195,
 506 = 4196,
 507 = 4258,
 508 = 4259,
 509 = 4318,
 510 = 4319,
 511 = 4320,
 512 = 4353,
 513 = 4354,
 514 = 4403,
 515 = 4404,
 516 = 4465,
 517 = 4466,
 518 = 4527,
 519 = 4528,
 520 = 4529,
 521 = 4590,
 522 = 4591,
 523 = 4658,
 524 = 4659,
 525 = 4723,
 526 = 4724,
 527 = 4725,
 528 = 4727,
 529 = 4728,
 530 = 4732,
 531 = 4733,
 532 = 4735,
 533 = 4736,
 534 = 4740,
 535 = 4741,
 536 = 4745,
 537 = 4746,
 538 = 4747,
 539 = 4748,
 540 = 4749,
 541 = 4750,
 542 = 4771,
 543 = 4772,
 544 = 4775,
 545 = 4776,
 546 = 4778,
 547 = 4779,
 548 = 4787,
 549 = 4788,
 550 = 4790,
 551 = 4791,
 552 = 4799,
 553 = 4800,
 554 = 4804,
 555 = 4805,
 556 = 4860,
 557 = 4861,
 558 = 4862,
 559 = 4863,
 560 = 4864,
 561 = 4865,
 562 = 4912,
 563 = 4913,
 564 = 4916,
 565 = 4917,
 566 = 4919,
 567 = 4920,
 568 = 4928,
 569 = 4929,
 570 = 4931,
 571 = 4932,
 572 = 4940,
 573 = 4941,
 574 = 4945,
 575 = 4946,
 576 = 5001,
 577 = 5002,
 578 = 5003,
 579 = 5004,
 580 = 5005,
 581 = 5006,
 582 = 5049,
 583 = 5050,
 584 = 5053,
 585 = 5054,
 586 = 5056,
 587 = 5057,
 588 = 5065,
 589 = 5066,
 590 = 5067,
 591 = 5068,
 592 = 5076,
 593 = 5077,
 594 = 5081,
 595 = 5082,
 596 = 5144,
 597 = 5145,
 598 = 5146,
 599 = 5147,
 600 = 5148,
 601 = 5149,
 602 = 5199,
 603 = 5200,
 604 = 5203,
 605 = 5204,
 606 = 5206,
 607 = 5207,
 608 = 5215,
 609 = 5216,
 610 = 5217,
 611 = 5218,
 612 = 5226,
 613 = 5227,
 614 = 5231,
 615 = 5232,
 616 = 5298,
 617 = 5299,
 618 = 5300,
 619 = 5301,
 620 = 5302,
 621 = 5303,
 622 = 5359,
 623 = 5360,
 624 = 5363,
 625 = 5364,
 626 = 5366,
 627 = 5367,
 628 = 5371,
 629 = 5372,
 630 = 5374,
 631 = 5375,
 632 = 5380,
 633 = 5381,
 634 = 5385,
 635 = 5386,
 636 = 5431,
 637 = 5432,
 638 = 5433,
 639 = 5434,
 640 = 5435,
 641 = 5436,
 642 = 5457,
 643 = 5458,
 644 = 5461,
 645 = 5462,
 646 = 5464,
 647 = 5465,
 648 = 5470,
 649 = 5471,
 650 = 5473,
 651 = 5474,
 652 = 5478,
 653 = 5479,
 654 = 5483,
 655 = 5484,
 656 = 5563,
 657 = 5564,
 658 = 5565,
 659 = 5566,
 660 = 5567,
 661 = 5568,
 662 = 5589,
 663 = 5590,
 664 = 5593,
 665 = 5594,
 666 = 5596,
 667 = 5597,
 668 = 5602,
 669 = 5603,
 670 = 5605,
 671 = 5606,
 672 = 5611,
 673 = 5612,
 674 = 5614,
 675 = 5615,
 676 = 5619,
 677 = 5620,
 678 = 5653,
 679 = 5654,
 680 = 5655,
 681 = 5656,
 682 = 5657,
 683 = 5658,
 684 = 5679,
 685 = 5680,
 686 = 5683,
 687 = 5684,
 688 = 5686,
 689 = 5687,
 690 = 5691,
 691 = 5692,
 692 = 5695,
 693 = 5696,
 694 = 5701,
 695 = 5702,
 696 = 5765,
 697 = 5766,
 698 = 5767,
 699 = 5768,
 700 = 5769,
 701 = 5770,
 702 = 5795,
 703 = 5796,
 704 = 5799,
 705 = 5800,
 706 = 5802,
 707 = 5803,
 708 = 5807,
 709 = 5808,
 710 = 5811,
 711 = 5812,
 712 = 5816,
 713 = 5817,
 714 = 5872,
 715 = 5873,
 716 = 5874,
 717 = 5875,
 718 = 5876,
 719 = 5877,
 720 = 5898,
 721 = 5899,
 722 = 5902,
 723 = 5903,
 724 = 5905,
 725 = 5906,
 726 = 5910,
 727 = 5911,
 728 = 5914,
 729 = 5915,
 730 = 5919,
 731 = 5920,
 732 = 5923,
 733 = 5924,
 734 = 5928,
 735 = 5929,
 736 = 5978,
 737 = 5979,
 738 = 5980,
 739 = 5981,
 740 = 5982,
 741 = 5983,
 742 = 6004,
 743 = 6005,
 744 = 6008,
 745 = 6009,
 746 = 6010,
 747 = 6015,
 748 = 6016,
 749 = 6020,
 750 = 6021,
 751 = 6023,
 752 = 6024,
 753 = 6076,
 754 = 6077,
 755 = 6078,
 756 = 6081,
 757 = 6082,
 758 = 6083,
 759 = 6087,
 760 = 6088,
 761 = 6089,
 762 = 6090,
 763 = 6091,
 764 = 6094,
 765 = 6095,
 766 = 6096,
 767 = 6097,
 768 = 6098,
 769 = 6099,
 770 = 6101,
 771 = 6102,
 772 = 6104,
 773 = 6105,
 774 = 6106,
 775 = 6109,
 776 = 6110,
 777 = 6111,
 778 = 6119,
 779 = 6120,
 780 = 6135,
 781 = 6136,
 782 = 6137,
 783 = 6138,
 784 = 6139,
}
